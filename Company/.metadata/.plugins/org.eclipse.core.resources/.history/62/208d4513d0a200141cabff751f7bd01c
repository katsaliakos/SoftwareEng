import java.awt.EventQueue;

import javax.swing.*;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.SystemColor;

public class WelcomeGUI {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					WelcomeGUI window = new WelcomeGUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}


	/**
	 * Create the application.
	 */
	public WelcomeGUI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		//Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		//frame.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
		
		frame = new JFrame();
		frame.getContentPane().setForeground(SystemColor.menu);
		frame.getContentPane().setBackground(SystemColor.menu);
		frame.setBounds(100, 100, 768, 480);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		frame.setLocationRelativeTo ( null );
		
		
		JLabel welmessage = new JLabel("\u039A\u03B1\u03BB\u03CE\u03C2 \u03AE\u03C1\u03B8\u03B1\u03C4\u03B5 \u03C3\u03C4\u03B7\u03BD \u03C5\u03C0\u03B7\u03C1\u03B5\u03C3\u03AF\u03B1 \u03B5\u03C0\u03B5\u03BE\u03B5\u03C1\u03B3\u03B1\u03C3\u03AF\u03B1\u03C2");
		welmessage.setBounds(100, 30, 563, 36);
		welmessage.setToolTipText("");
		frame.getContentPane().add(welmessage);
		welmessage.setForeground(Color.RED);
		welmessage.setHorizontalAlignment(SwingConstants.CENTER);
		welmessage.setFont(new Font("Times New Roman", Font.BOLD, 22));
		
		JTextPane copyrights = new JTextPane();
		copyrights.setEditable(false);
		copyrights.setBounds(548, 348, 194, 82);
		copyrights.setText("Powered by Wolfpack\r\nCopyrights owed by \r\nChris Anagniou\r\nChris Katsaris\r\nElias Galanopoulos");
		frame.getContentPane().add(copyrights);
		
		JButton buttonHR = new JButton("HR LOGIN");
		buttonHR.setFont(new Font("Tahoma", Font.PLAIN, 14));
		buttonHR.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				HRLogin hr = new HRLogin();
				hr.setVisible(true);
			}
		});
		buttonHR.setBounds(32, 319, 151, 51);
		frame.getContentPane().add(buttonHR);
		
		JButton buttonCHIEF = new JButton("CHIEF LOGIN");
		buttonCHIEF.setFont(new Font("Tahoma", Font.PLAIN, 14));
		buttonCHIEF.setBounds(233, 319, 151, 51);
		buttonCHIEF.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				CHIEFLogin cf = new CHIEFLogin();
				cf.setVisible(true);
			}
		});
		frame.getContentPane().add(buttonCHIEF);
		
		JButton btnNewButton = new JButton("\u0388\u03BE\u03BF\u03B4\u03BF\u03C2");
		btnNewButton.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
			}
		});
		btnNewButton.setBounds(140, 381, 141, 51);
		frame.getContentPane().add(btnNewButton);
		
		JLabel label = new JLabel("\u03BA\u03B1\u03B9 \u03B1\u03BE\u03B9\u03BF\u03BB\u03CC\u03B3\u03B7\u03C3\u03B7\u03C2 \u03C0\u03C1\u03BF\u03C3\u03C9\u03C0\u03B9\u03BA\u03BF\u03CD.");
		label.setToolTipText("");
		label.setHorizontalAlignment(SwingConstants.CENTER);
		label.setForeground(Color.RED);
		label.setFont(new Font("Times New Roman", Font.BOLD, 22));
		label.setBounds(100, 65, 563, 36);
		frame.getContentPane().add(label);
		
		
	}
	private static void addPopup(Component component, final JPopupMenu popup) {
		component.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			public void mouseReleased(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			private void showMenu(MouseEvent e) {
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		});
	}
}
